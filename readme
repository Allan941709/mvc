Explicación del Código MVC - Car Clicker
Este código implementa el patrón Modelo-Vista-Controlador (MVC) en una aplicación web simple donde el usuario puede seleccionar un coche y hacer clic en un botón para incrementar un contador de clics y reducir el stock del coche.

1. Modelo (modelo)
El modelo almacena los datos de la aplicación. En este caso, es una lista de coches con las siguientes propiedades:

name: Nombre del coche.
clicks: Número de veces que se ha hecho clic en el coche.
stock: Cantidad de coches disponibles.
image: Imagen del coche.
price: Precio del coche.
cocheActual: Guarda el coche que está actualmente seleccionado.
El modelo no tiene lógica, solo almacena la información.

2. Controlador (controlador)
El controlador es el intermediario entre el modelo y la vista. Se encarga de:

Inicializar la aplicación.
Obtener la lista de coches.
Cambiar el coche seleccionado.
Incrementar los clics y reducir el stock.
Verificar si todos los coches están agotados.
🔍 Funciones principales:
✔ init(): Inicializa la aplicación y selecciona el primer coche.
✔ obtenerCoches(): Retorna la lista de coches.
✔ obtenerCocheActual(): Devuelve el coche seleccionado.
✔ seleccionCoche(car): Cambia el coche seleccionado y actualiza la vista.
✔ incrementarCliks():
    ✔ Aumenta el número de clics.
    ✔ Reduce el stock.
    ✔ Actualiza la vista.
✔ todoSinStock(): Comprueba si todos los coches tienen stock = 0.

3. Vista (vista y vistaCoche)
La vista se encarga de la interfaz de usuario y muestra la información de los coches en la página web.

Vista de la lista de coches
Obtiene la lista de coches.
Crea botones con el nombre de cada coche.
Cuando se hace clic en un botón, cambia el coche seleccionado.
Vista del coche seleccionado
Muestra el nombre, la cantidad de clics y el stock del coche seleccionado.
Muestra la imagen del coche.
Agrega un botón para incrementar los clics.
Muestra un mensaje si el coche se queda sin stock.
4. Conectar con el HTML
Cuando la página carga, el código ejecuta init(), que selecciona el primer coche y muestra la lista de coches en pantalla.

Resumen Final
✅ Modelo: Guarda los datos de los coches y el coche seleccionado.
✅ Controlador: Gestiona la lógica de la aplicación y actualiza la vista.
✅ Vista: Muestra la interfaz y permite la interacción del usuario.

Con este sistema, se mantiene el código bien estructurado y organizado utilizando el patrón MVC. 🚀